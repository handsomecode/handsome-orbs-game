.game {
  &__sidebar {
    float: left;
    position: relative;

    .em(width, 570px, 18px);
    .em(height, 576px, 18px);

    .em(padding-left, 50px, 18px);
    .em(padding-top, 100px, 18px);

    &-mute-button {
      position: absolute;
      top: 0;
      right: 0;

      width: 28px;
      height: 28px;

      background: url('../images/sprites/volume.png') no-repeat 0 115%;

      &--active {
        background: url('../images/sprites/volume.png') no-repeat 0 0;
      }
    }
  }
  &__scoreboard {
    position: relative;

    .em(height, 100px, 18px);

    font-family: @font-stack-avenir-roman;

    &:before {
      content: 'current score';

      .em(font-size, 12px, 18px);
      color: #aaaaaa;
      .em(letter-spacing, 4.59px, 12px);
      text-transform: uppercase;
    }
    &-count {
      position: relative;

      .em(padding-top, 10px, 90px);

      .em(font-size, 90px, 18px);
      color: #37c97c;

      p {
        float: left;

        position: relative;

        transform: translateY(0) scale(1, 1);

        &:before {
          content: attr(data-value);

          float: left;
        }
        &:after {
          content: attr(data-to-next-value);

          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
        }
      }
      &--increase > p[data-to-next-value] {
        &:before {
          opacity: 0;

          animation: increaseDisappearDigitalsAnimation @increaseScoreAnimationDuration cubic-bezier(0.25, 0.1, 0.25, 0.1);

          @keyframes increaseDisappearDigitalsAnimation {
            0% {
              opacity: 1;

              transform: translateY(0) scale(1, 1);
            }
            50% {
              opacity: 0.4;

              transform: translateY(20%) scale(0.8, 0.8);
            }
            100% {
              opacity: 0;

              transform: translateY(40%) scale(0.6, 0.6);
            }
          }
        }
        &:after {
          animation: increaseAppearDigitalsAnimation @increaseScoreAnimationDuration cubic-bezier(0.25, 0.1, 0.25, 0.1);

          @keyframes increaseAppearDigitalsAnimation {
            0% {
              opacity: 0;

              transform: translateY(-40%) scale(0.6, 0.6);
            }
            50% {
              opacity: 1;

              transform: translateY(-20%) scale(0.8, 0.8);
            }
            100% {
              opacity: 1;

              transform: translateY(0) scale(1, 1);
            }
          }
        }
      }
      &--decrease {
        > p[data-to-next-value] {
          &:before {
            opacity: 0;

            animation: decreaseDisappearDigitalsAnimation @generalAnimationDuration cubic-bezier(0.25, 0.1, 0.25, 0.1);

            @keyframes decreaseDisappearDigitalsAnimation {
              0% {
                opacity: 1;

                transform: translateY(0) scale(1, 1);
              }
              25% {
                opacity: 0.4;
              }
              50% {
                opacity: 0;
              }
              100% {
                opacity: 0;
              }
            }
          }
          &:after {
            animation: decreaseAppearDigitalsAnimation @generalAnimationDuration cubic-bezier(0.25, 0.1, 0.25, 0.1);

            @keyframes decreaseAppearDigitalsAnimation {
              0% {
                opacity: 0;

                transform: translateY(40%) scale(0.6, 0.6);
              }
              50% {
                opacity: 1;

                transform: translateY(20%) scale(0.8, 0.8);
              }
              100% {
                opacity: 1;

                transform: translateY(0) scale(1, 1);
              }
            }
          }
        }
      }
    }
  }
}
